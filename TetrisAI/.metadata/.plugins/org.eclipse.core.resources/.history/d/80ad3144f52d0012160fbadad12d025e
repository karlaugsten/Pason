package ai;

import java.util.List;

public class Tetrimino {

	protected List<Position> offsets;
	protected List<Integer> bitmasks;
	private int column;
	private int row;
	private int orientation;
	protected int possibleorientations;
	private int currentoffset = 0;
	private int leftMost;
	private int rightMost;
	
	public Tetrimino(int orientation, int column, int row){
		this.orientation = orientation;
		this.column = column;
		this.row = row;
	}
	
	/**
	 * 
	 * @return The column where the terimino is located
	 */
	public int getColumn(){
		return column;
	}
	
	/**
	 * 
	 * @return The orientation number for this tetrimino
	 */
	public int getOrientation(){
		return orientation;
	}
	/**
	 * 
	 * @param row the position of the center of the Tetrimino.
	 * @param column The column of the position of the Tetrimino.
	 * @return The position of the next block of the Tetrimino, returns null if all positions have been returned.
	 */
	public Position getNextOffset(int row, int column){
		if(currentoffset == offsets.size()){
			currentoffset = 0;
			return null;
		}
		Position next = offsets.get(currentoffset++);
		Position ret = new Position(column+next.x,row+next.y);
		return ret;
	}
	
	public int getLeftMost(){
		return leftMost;
	}
	
	public int getRightMost(){
		return rightMost;
	}
	
	/**
	 * 
	 * @param column The column of the center of the Tetrimino we are dropping.
	 * @param boardstate The state of the board we are dropping onto.
	 * @return The new board state.
	 */
	public int[] dropTetrimino(int column, int[] boardstate){
		
		return 0;
	}
	
	
}
