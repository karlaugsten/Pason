package tetrisconnector;

import org.json.JSONArray;
import org.json.JSONObject;


public class PieceStateResp extends Response {

	private String gamename;
	private PieceState opponentstate;
	private PieceState state;
	private String[] piecequeue;
	
	
	public PieceStateResp(JSONObject j){
		
		super(Integer.parseInt(j.getString("sequence")),(double)j.get("timestamp"),j.getString("comm_type"), j);
		this.piecequeue = (String[]) j.get("queue");
		JSONArray jsub = j.getJSONArray("states");
		if(jsub.getJSONObject(0).has("Team 112"))
		{
			this.state = new PieceState(jsub.getJSONObject(0));
			this.opponentstate = new PieceState(jsub.getJSONObject(1));
			
		}
		else if(jsub.getJSONObject(1).has("Team 112"))
		{
			this.state = new PieceState(jsub.getJSONObject(1));
			this.opponentstate = new PieceState(jsub.getJSONObject(0));
			
		}
		else
		{
			System.out.println("ERROR: DID NOT RETRIEVE PIECE STATE");
		}
	}

	public String getGamename() {
		return gamename;
	}


	public void setGamename(String gamename) {
		this.gamename = gamename;
	}


	class PieceState{
		
		private String piece;
		private int orient;
		private int number;
		private int row;
		private int column;
		
		public PieceState(JSONObject st){
			this.piece = st.getString("piece");
			this.orient = st.getInt("orient");
			this.number = st.getInt("number");
			this.row = st.getInt("row");
			this.column = st.getInt("column");
			
			
		}
		
	}
	
}
